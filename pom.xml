<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>thread_study</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>thread_study</name>
    <description>thread_study</description>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.26</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <java.version>1.8</java.version>
        <docker.plugin.version>0.32.0</docker.plugin.version>
        <docker.host>http://172.18.92.164:2375</docker.host>
        <docker.registry>172.18.92.164:5000</docker.registry>
        <docker.namespace>fabric8</docker.namespace>
        <docker.username>admin</docker.username>
        <docker.password>admin</docker.password>
    </properties>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!-- 发现io.fabric8更好用，就换了一个 -->
                <configuration>
                    <image>
                        <!--配置镜像名称-->
                        <name>${docker.registry}/boot/${project.name}:${project.version}</name>
                        <!--镜像打包完成后自动推送到镜像仓库-->
                        <publish>true</publish>
                    </image>
                    <docker>
                        <!--Docker远程管理地址-->
                        <host>${docker.host}</host>
                        <!--不使用TLS访问-->
                        <tlsVerify>false</tlsVerify>
                        <!--Docker推送镜像仓库配置-->
                        <publishRegistry>
                            <!--推送镜像仓库用户名-->
                            <username>${docker.username}</username>
                            <!--推送镜像仓库密码-->
                            <password>${docker.password}</password>
                            <!--推送镜像仓库地址-->
                            <url>${docker.registry}</url>
                        </publishRegistry>
                    </docker>
                </configuration>
                <!--<executions>-->
                <!--    <execution>-->
                <!--        <id>docker-exec</id>-->
                <!--        <phase>install</phase>-->
                <!--        <goals>-->
                <!--            <goal>build-image</goal>-->
                <!--        </goals>-->
                <!--    </execution>-->
                <!--</executions>-->
            </plugin>
        </plugins>
    </build>

</project>
